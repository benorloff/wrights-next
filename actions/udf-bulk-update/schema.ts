import { z } from "zod";

// All fields including whse and partNo are optional
export const UdfFields = z.object({
    whse: z.coerce.string(),
    partNo: z.coerce.string(),
    brand: z.coerce.string(),
    features: z.coerce.string().array(),
    featuredImageUrl: z.coerce.string(),
    imageUrls: z.coerce.string().array(),
    length: z.coerce.number(),
    width: z.coerce.number(),
    height: z.coerce.number(),
    unit: z.coerce.string(),
    cadUrl: z.coerce.string(),
    catalogPageUrl: z.coerce.string(),
    dataSheetUrl: z.coerce.string(),
    userManualUrl: z.coerce.string(),
    ratingHp: z.coerce.number(),
    ratingHp2: z.coerce.string(),
    ratingKw: z.coerce.number(),
    maxSpeed: z.coerce.number(),
    speed2: z.coerce.string(),
    voltage: z.coerce.string(),
    phase: z.coerce.string(),
    current: z.coerce.string(),
    current2: z.coerce.string(),
    downThrust: z.coerce.string(),
    duty: z.coerce.string(),
    efficiency: z.coerce.string(),
    electricalType: z.coerce.string(),
    startingType: z.coerce.string(),
    framePrefix: z.coerce.string(),
    frameSize: z.coerce.string(),
    frameSuffix: z.coerce.string(),
    frameLength: z.coerce.number(),
    frameLengthMm: z.coerce.number(),
    frameMaterial: z.coerce.string(),
    frameType: z.coerce.string(),
    enclosureType: z.coerce.string(),
    rotation: z.coerce.string(),
    mountingType: z.coerce.string(),
    maxAmbient: z.coerce.string(),
    boxMounting: z.coerce.string(),
    baseDiameter: z.coerce.string(),
    shaftDiameter: z.coerce.string(),
    shaftDiameterMm: z.coerce.number(),
    shaftExtension: z.coerce.string(),
    shaftExtensionMm: z.coerce.number(),
    shaftType: z.coerce.string(),
    cDimMm: z.coerce.number(),
    cDimIn: z.coerce.number(),
    connectionDrawingNo: z.coerce.string(),
    deBearingSize: z.coerce.string(),
    deBearingType: z.coerce.string(),
    frequency: z.coerce.string(),
    hazardousLocation: z.coerce.string(),
    insulationClass: z.coerce.string(),
    ipCode: z.coerce.string(),
    kvaCode: z.coerce.string(),
    motorOrientation: z.coerce.string(),
    nemaDesign: z.coerce.string(),
    numPoles: z.coerce.string(),
    numSpeeds: z.coerce.string(),
    odeBearingSize: z.coerce.string(),
    odeBearingType: z.coerce.string(),
    outlineDrawingNo: z.coerce.string(),
    powerFactor: z.coerce.string(),
    resistanceMain: z.coerce.string(),
    serviceFactor: z.coerce.number(),
    thruBoltsExt: z.coerce.string(),
    overload: z.coerce.string(),
    certCe: z.coerce.boolean(),
    certCsa: z.coerce.boolean(),
    certUl: z.coerce.boolean(),
}).partial();

// Same schema as udfFields except whse and partNo are required
export const UdfUpdateSchema = UdfFields.required({
    whse: true,
    partNo: true,
});

// Convert UdfUpdateSchema to an array for bulk updates
export const UdfBulkUpdateSchema = UdfUpdateSchema.array();

