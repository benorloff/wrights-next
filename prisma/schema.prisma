// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Inventory {
  id          Int     @id
  whse        String  
  partNo      String  
  description String? 
  // status             Int?
  // availableQty       String?
  // onHandQty          String?
  // backorderQty       String?
  // committedQty       String?
  // onPurchaseQty      String?
  // buyMeasureCode     String?
  // stockMeasureCode   String?
  // sellMeasureCode    String?
  // alternatePartNo    String?
  // currentCost        String?
  // averageCost        String?
  // standardCost       String?
  // groupNo            String?
  // type               String?
  // salesDepartment    String?
  // userDef1           String?
  // userDef2           String?
  // poDueDate          String?
  // currentPONo        String?
  // reorderPoint       String?
  // minimumBuyQty      String?
  // lastYearQty        String?
  // lastYearSales      String?
  // thisYearQty        String?
  // thisYearSales      String?
  // nextYearQty        String?
  // nextYearSales      String?
  // allowBackorders    Boolean?
  // allowReturns       Boolean?
  // dutyPct            String?
  // freightPct         String?
  // defaultExpiryDate  Int?
  // lotConsumeType     Int?
  // manufactureCountry String?
  // harmonizedCode     String?
  // suggestedOrderQty  String?
  // pricing            String?
  // uom                String?
  // packSize           String?
  // foregroundColor    String
  // backgroundColor    String
  // levy               String?
  // primaryVendor      String?
  // allowBackOrders    Boolean?
  // dfltExpiryDays     Int?
  // mfgCountry         String?
  // hsCode             String?
  // serializedMode     String?
  // upload             Boolean?
  // lastModified       String?
  // lastSaleDate       String?
  // lastReceiptDate    String?
  // lastCountDate      String?
  // lastCountQty       String?
  // lastCountVariance  String?
  // created            String?
  // createdBy          String?
  // modified           String?
  // modifiedBy         String?
  // links              String?

  udf Udf?

  // createdAt DateTime @default(now())
  // updatedAt DateTime @updatedAt

  @@unique([whse, partNo])
  @@map("inventory")
}

model Udf {
  id                  Int      @id @default(autoincrement())
  brand               String?
  features            String[]
  featuredImageUrl    String?  @map("featured_image_url")
  imageUrls           String[] @map("image_urls")
  length              Float?
  width               Float?
  height              Float?
  unit                String?
  cadUrl              String?  @map("cad_url")
  catalogPageUrl      String?  @map("catalog_page_url")
  dataSheetUrl        String?  @map("data_sheet_url")
  userManualUrl       String?  @map("user_manual_url")
  ratingHp            Float?   @map("rating_hp")
  ratingHp2           String?  @map("rating_hp2")
  ratingKw            Float?   @map("rating_kw")
  maxSpeed            Float?   @map("max_speed")
  speed2              String?
  voltage             String?
  phase               String?
  current             String?
  current2            String?
  downThrust          String?  @map("down_thrust")
  duty                String?
  efficiency          String?
  electricalType      String?  @map("electrical_type")
  startingType        String?  @map("starting_type")
  framePrefix         String?  @map("frame_prefix")
  frameSize           String?  @map("frame_size")
  frameSuffix         String?  @map("frame_suffix")
  frameLength         Float?   @map("frame_length")
  frameLengthMm       Float?   @map("frame_length_mm")
  frameMaterial       String?  @map("frame_material")
  frameType           String?  @map("frame_type")
  enclosureType       String?  @map("enclosure_type")
  rotation            String?
  mountingType        String?  @map("mounting_type")
  maxAmbient          String?  @map("max_ambient")
  boxMounting         String?  @map("box_mounting")
  baseDiameter        String?  @map("base_diameter")
  shaftDiameter       String?  @map("shaft_diameter")
  shaftDiameterMm     Float?   @map("shaft_diameter_mm")
  shaftExtension      String?  @map("shaft_extension")
  shaftExtensionMm    Float?   @map("shaft_extension_mm")
  shaftType           String?  @map("shaft_type")
  cDimMm              Float?   @map("c_dim_mm")
  cDimIn              Float?   @map("c_dim_in")
  connectionDrawingNo String?  @map("connection_drawing_no")
  deBearingSize       String?  @map("de_bearing_size")
  deBearingType       String?  @map("de_bearing_type")
  frequency           String?
  hazardousLocation   String?  @map("hazardous_location")
  insulationClass     String?  @map("insulation_class")
  ipCode              String?  @map("ip_code")
  kvaCode             String?  @map("kva_code")
  motorOrientation    String?  @map("motor_orientation")
  nemaDesign          String?  @map("nema_design")
  numPoles            String?  @map("num_poles")
  numSpeeds           String?  @map("num_speeds")
  odeBearingSize      String?  @map("ode_bearing_size")
  odeBearingType      String?  @map("ode_bearing_type")
  outlineDrawingNo    String?  @map("outline_drawing_no")
  powerFactor         String?  @map("power_factor")
  resistanceMain      String?  @map("resistance_main")
  serviceFactor       Float?   @map("service_factor")
  thruBoltsExt        String?  @map("thru_bolts_ext")
  overload            String?
  certCe              Boolean? @map("cert_ce")
  certCsa             Boolean? @map("cert_csa")
  certUl              Boolean? @map("cert_ul")

  product   Inventory @relation(fields: [productId], references: [id])
  productId Int       @unique @map("product_id")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("udf")
}

model File {
  id   Int    @id @default(autoincrement())
  name String
  url  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("file")
}

model Image {
  id   Int    @id @default(autoincrement())
  name String
  url  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("image")
}

enum Action {
  CREATE
  UPDATE
  DELETE
}

enum EntityType {
  INVENTORY
  UDF
  FILE
  IMAGE
}

model AuditLog {
  id         Int        @id @default(autoincrement())
  action     Action
  entityId   Int
  entityType EntityType
  userId     String?

  createdAt DateTime @default(now())

  @@map("audit_log")
}
